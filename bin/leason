#!/usr/bin/env node

'use strict'

const fs = require('fs')
const stdin = require('stdin')
const path = require('path')
const program = require('commander')
const pkg = require('../package.json')
const Leason = require('../lib/index')

function parse (str) {
  const json = JSON.parse(str)
  const leason = new Leason()
  leason.setOption('addTitle', program.title)
  leason.setOption('addDefault', program.default)
  if (program.enum) {
    leason.setOption('captureEnum', {
      minCount: 1,
      maxVariant: 10
    })
  }
  if (program.similar) {
    leason.setOption('mergeSimilar', program.similar)
  }
  if (program.format) {
    leason.setOption('captureFormat', {minCount: 1})
  }

  leason.parse(json)

  console.log(JSON.stringify(leason.schema, null, 2))
}

program
  .version(pkg.version)
  .option('-t, --title', 'add titles')
  .option('-f, --format', 'try to detect format')
  .option('-e, --enum', 'try to detect enum')
  .option('-s, --similar <n>', 'merge similar objects if `n` or more properties are the same')
  .option('-d, --default', 'add defaults')
  .on('--help', () => {
    console.log('  Examples:')
    console.log('')
    console.log('    $ leason my.json')
    console.log('    $ cat my.json | leason > schema.json')
    console.log('')
  })
  .parse(process.argv)

// todo: stream when no file, json pipe
if (program.args.length === 0) {
  stdin(parse)
} else {
  const file = path.join(process.cwd(), program.args[0])
  if (fs.existsSync(file)) {
    parse(fs.readFileSync(file).toString())
  } else {
    console.log('File does not exists.')
  }
}
